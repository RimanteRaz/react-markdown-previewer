{"version":3,"sources":["components/intro.js","components/editor.js","components/preview.js","App.js","reportWebVitals.js","index.js"],"names":["Intro","props","className","Editor","handleChange","bind","event","this","onInputChange","target","value","markdown","id","placeholder","onChange","Component","DOMPurify","require","marked","setOptions","gfm","breaks","Preview","dangerouslySetInnerHTML","__html","sanitize","App","handleInputChange","state","input","setState","initialMarkdown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAYeA,MAZf,SAAeC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,oDACA,sJC0BSC,E,kDA3Bb,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IACDG,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,gDAInB,SAAaC,GACXC,KAAKN,MAAMO,cAAcF,EAAMG,OAAOC,S,oBAExC,WACE,IAAMC,EAAWJ,KAAKN,MAAMU,SAC5B,OACE,sBAAKT,UAAU,aAAf,UACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,YAAd,sBAEF,qBAAKA,UAAU,WAAf,SACE,0BACEU,GAAG,SACHC,YAAY,0BACZH,MAAOC,EACPG,SAAUP,KAAKH,wB,GApBNW,aCDfC,EAAYC,EAAQ,IACpBC,EAASD,EAAQ,IAEvBC,EAAOC,WAAW,CAChBC,KAAK,EACLC,QAAQ,I,IAwBKC,E,4JApBb,WACE,IAAMX,EAAWJ,KAAKN,MAAMU,SAC5B,OACE,sBAAKT,UAAU,cAAf,UACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,YAAd,uBAEF,qBAAKA,UAAU,WAAf,SACE,qBACEU,GAAG,UACHW,wBAAyB,CACvBC,OAAQR,EAAUS,SAASP,EAAOP,gB,GAZ1BI,aCShBW,G,wDACJ,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,kBAAoB,EAAKA,kBAAkBtB,KAAvB,gBACzB,EAAKuB,MAAQ,CAAEjB,SAAU,IAHR,E,qDAKnB,SAAkBkB,GAChBtB,KAAKuB,SAAS,CAAEnB,SAAUkB,M,+BAE5B,WACEtB,KAAKuB,SAAS,CAAEnB,SAAUoB,M,oBAE5B,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEM,cAAeD,KAAKoB,kBACpBhB,SAAUJ,KAAKqB,MAAMjB,WAEvB,cAAC,EAAD,CAASA,SAAUJ,KAAKqB,MAAMjB,kB,GApBpBI,cA0BZgB,EAAe,w9BAiDNL,ICjFAM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.230503cf.chunk.js","sourcesContent":["function Intro(props) {\r\n  return (\r\n    <div className=\"intro\">\r\n      <h1>Markdown Previewer</h1>\r\n      <p>\r\n        In the Editor field enter your markdown. The formatted text will be\r\n        automatically displayed in the Preview field.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.props.onInputChange(event.target.value);\r\n  }\r\n  render() {\r\n    const markdown = this.props.markdown;\r\n    return (\r\n      <div className=\"editor-box\">\r\n        <div className=\"box-head\">\r\n          <h5 className=\"box-title\">Editor</h5>\r\n        </div>\r\n        <div className=\"box-body\">\r\n          <textarea\r\n            id=\"editor\"\r\n            placeholder=\"Enter your text here...\"\r\n            value={markdown}\r\n            onChange={this.handleChange}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import React, { Component } from \"react\";\r\nconst DOMPurify = require(\"dompurify\");\r\nconst marked = require(\"marked\");\r\n\r\nmarked.setOptions({\r\n  gfm: true,\r\n  breaks: true,\r\n});\r\n\r\nclass Preview extends Component {\r\n  render() {\r\n    const markdown = this.props.markdown;\r\n    return (\r\n      <div className=\"preview-box\">\r\n        <div className=\"box-head\">\r\n          <h5 className=\"box-title\">Preview</h5>\r\n        </div>\r\n        <div className=\"box-body\">\r\n          <div\r\n            id=\"preview\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: DOMPurify.sanitize(marked(markdown)),\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n","// import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport Intro from \"./components/intro\";\nimport Editor from \"./components/editor\";\nimport Preview from \"./components/preview\";\nimport \"./App.scss\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Intro />\n//       <h1>Test</h1>\n//       <p>Checking if this works on github pages</p>\n//       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = { markdown: \"\" };\n  }\n  handleInputChange(input) {\n    this.setState({ markdown: input });\n  }\n  componentDidMount() {\n    this.setState({ markdown: initialMarkdown });\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <Intro />\n        <Editor\n          onInputChange={this.handleInputChange}\n          markdown={this.state.markdown}\n        />\n        <Preview markdown={this.state.markdown} />\n      </div>\n    );\n  }\n}\n\nconst initialMarkdown = `# Preview Markdown\n\nThis preview text will display a few simple things you can do with Markdown. \nLearn more in this [Markdown guide](https://www.markdownguide.org/basic-syntax/).\n\n## So what can I do?\n\n#### Make lists\n\n- Like this one.\n- And while we're here...\n- Let's format our text:\n  - We can make it **bold**.\n  - Change it to _italic_.\n  - Maybe even ~~cross it out~~.\n\n#### Display code\n\nFor inline code use single backticks: \\`<div></div>\\`\n\nFor code blocks use three:\n\\`\\`\\`\n// this is multi-line code:\n\nfunction example(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' \n      && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\n#### Decorate\n\n> Add a block quote!\n\n###### Insert a table:\n\nColumn 1 | Column 2 | Column 3\n-------- | -------- | --------\nItem 1 | Item 2 | Item 3\nItem 4 | Item 5 | Item 6\n\n###### Embed an image:\n\n![React Logo w/ Text](https://seeklogo.com/images/R/react-logo-7B3CE81517-seeklogo.com.png)\n\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}